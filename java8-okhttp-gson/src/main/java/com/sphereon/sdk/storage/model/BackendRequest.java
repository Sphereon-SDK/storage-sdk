/*
 * Storage
 * Sphereon Storage API provides an abstraction layer for storage of (virtual) folders and streams (files/contents) fully agnostic with respect to supported storage backends. This allows for easy uniform access to and manipulation of contents regardless of the content backend being used. Currently the following backends are supported: Sphereon Cloud Storage, Amazon S3, Azure Blob Storage, Google Cloud Storage or one of the Xillio supported content repositories like Documentum, Dropbox etc. For more information about this API please visit https://docs.sphereon.com/api/storage/0.8/
 *
 * OpenAPI spec version: 0.8
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.storage.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sphereon.sdk.storage.model.CredentialsRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BackendRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-06T13:57:30.609+01:00")
public class BackendRequest {
  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("credentials")
  private CredentialsRequest credentials = null;

  /**
   * The type of backend that is created. This field allows users to create a local backend or with supported 3rd parties.
   */
  @JsonAdapter(BackendTypeEnum.Adapter.class)
  public enum BackendTypeEnum {
    SPHEREON_CLOUD_STORAGE("SPHEREON_CLOUD_STORAGE"),
    
    AMAZON_S3("AMAZON_S3"),
    
    MS_AZURE_BLOB_STORAGE("MS_AZURE_BLOB_STORAGE"),
    
    GOOGLE_CLOUD_STORAGE("GOOGLE_CLOUD_STORAGE"),
    
    XILLIO_ENGINE("XILLIO_ENGINE");

    private String value;

    BackendTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BackendTypeEnum fromValue(String text) {
      for (BackendTypeEnum b : BackendTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BackendTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackendTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BackendTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BackendTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("backendType")
  private BackendTypeEnum backendType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  /**
   * The storage region where the container and files are stored. This option is available for Google and Amazon Storage. For Azure is only possible to set the region when creating the storage account.
   */
  @JsonAdapter(RegionEnum.Adapter.class)
  public enum RegionEnum {
    AMAZON_S3_AP_NORTHEAST_1("AMAZON_S3_AP_NORTHEAST_1"),
    
    AMAZON_S3_AP_NORTHEAST_2("AMAZON_S3_AP_NORTHEAST_2"),
    
    AMAZON_S3_AP_SOUTH_1("AMAZON_S3_AP_SOUTH_1"),
    
    AMAZON_S3_AP_SOUTHEAST_1("AMAZON_S3_AP_SOUTHEAST_1"),
    
    AMAZON_S3_AP_SOUTHEAST_2("AMAZON_S3_AP_SOUTHEAST_2"),
    
    AMAZON_S3_CA_CENTRAL_1("AMAZON_S3_CA_CENTRAL_1"),
    
    AMAZON_S3_CN_NORTH_1("AMAZON_S3_CN_NORTH_1"),
    
    AMAZON_S3_EU_CENTRAL_1("AMAZON_S3_EU_CENTRAL_1"),
    
    AMAZON_S3_EU_WEST_1("AMAZON_S3_EU_WEST_1"),
    
    AMAZON_S3_EU_WEST_2("AMAZON_S3_EU_WEST_2"),
    
    AMAZON_S3_SA_EAST_1("AMAZON_S3_SA_EAST_1"),
    
    AMAZON_S3_US_EAST_1("AMAZON_S3_US_EAST_1"),
    
    AMAZON_S3_US_EAST_2("AMAZON_S3_US_EAST_2"),
    
    AMAZON_S3_US_STANDARD("AMAZON_S3_US_STANDARD"),
    
    AMAZON_S3_US_WEST_1("AMAZON_S3_US_WEST_1"),
    
    AMAZON_S3_US_WEST_2("AMAZON_S3_US_WEST_2"),
    
    GOOGLE_STORAGE_ASIA("GOOGLE_STORAGE_ASIA"),
    
    GOOGLE_STORAGE_ASIA_EAST1("GOOGLE_STORAGE_ASIA_EAST1"),
    
    GOOGLE_STORAGE_EU("GOOGLE_STORAGE_EU"),
    
    GOOGLE_STORAGE_US("GOOGLE_STORAGE_US"),
    
    GOOGLE_STORAGE_US_CENTRAL1("GOOGLE_STORAGE_US_CENTRAL1"),
    
    GOOGLE_STORAGE_US_CENTRAL2("GOOGLE_STORAGE_US_CENTRAL2"),
    
    GOOGLE_STORAGE_US_EAST1("GOOGLE_STORAGE_US_EAST1"),
    
    GOOGLE_STORAGE_US_EAST2("GOOGLE_STORAGE_US_EAST2"),
    
    GOOGLE_STORAGE_US_EAST3("GOOGLE_STORAGE_US_EAST3"),
    
    GOOGLE_STORAGE_US_WEST1("GOOGLE_STORAGE_US_WEST1");

    private String value;

    RegionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RegionEnum fromValue(String text) {
      for (RegionEnum b : RegionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RegionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RegionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RegionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("region")
  private RegionEnum region = null;

  @SerializedName("parentId")
  private String parentId = null;

  public BackendRequest endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * The endpoint for the backend. Please note that only a Xillio backend needs the endpoint configured for now. Other backends are resolved automatically
   * @return endpoint
  **/
  @ApiModelProperty(value = "The endpoint for the backend. Please note that only a Xillio backend needs the endpoint configured for now. Other backends are resolved automatically")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public BackendRequest credentials(CredentialsRequest credentials) {
    this.credentials = credentials;
    return this;
  }

   /**
   * The credentials details
   * @return credentials
  **/
  @ApiModelProperty(required = true, value = "The credentials details")
  public CredentialsRequest getCredentials() {
    return credentials;
  }

  public void setCredentials(CredentialsRequest credentials) {
    this.credentials = credentials;
  }

  public BackendRequest backendType(BackendTypeEnum backendType) {
    this.backendType = backendType;
    return this;
  }

   /**
   * The type of backend that is created. This field allows users to create a local backend or with supported 3rd parties.
   * @return backendType
  **/
  @ApiModelProperty(required = true, value = "The type of backend that is created. This field allows users to create a local backend or with supported 3rd parties.")
  public BackendTypeEnum getBackendType() {
    return backendType;
  }

  public void setBackendType(BackendTypeEnum backendType) {
    this.backendType = backendType;
  }

  public BackendRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BackendRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BackendRequest region(RegionEnum region) {
    this.region = region;
    return this;
  }

   /**
   * The storage region where the container and files are stored. This option is available for Google and Amazon Storage. For Azure is only possible to set the region when creating the storage account.
   * @return region
  **/
  @ApiModelProperty(value = "The storage region where the container and files are stored. This option is available for Google and Amazon Storage. For Azure is only possible to set the region when creating the storage account.")
  public RegionEnum getRegion() {
    return region;
  }

  public void setRegion(RegionEnum region) {
    this.region = region;
  }

  public BackendRequest parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * The backend that is used for when properties are not set. This allows usernamePasswordCredentials to be set at one backend and re-used by multiple backends.
   * @return parentId
  **/
  @ApiModelProperty(value = "The backend that is used for when properties are not set. This allows usernamePasswordCredentials to be set at one backend and re-used by multiple backends.")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackendRequest backendRequest = (BackendRequest) o;
    return Objects.equals(this.endpoint, backendRequest.endpoint) &&
        Objects.equals(this.credentials, backendRequest.credentials) &&
        Objects.equals(this.backendType, backendRequest.backendType) &&
        Objects.equals(this.name, backendRequest.name) &&
        Objects.equals(this.description, backendRequest.description) &&
        Objects.equals(this.region, backendRequest.region) &&
        Objects.equals(this.parentId, backendRequest.parentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpoint, credentials, backendType, name, description, region, parentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackendRequest {\n");
    
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    backendType: ").append(toIndentedString(backendType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

